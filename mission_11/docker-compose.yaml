name: sprint

services:
  db:
    image: postgres:16
    container_name: sprint-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=sprint
    networks:
      - sprint-net
    ports:
      - 5432:5432
    volumes:
      - sprint-vol:/var/lib/postgresql/data
  
  server:
    image: sooyen/sprint:latest
    container_name: sprint-server
    ports:
      - 3000:3000
    networks:
      - sprint-net
    volumes:
      - upload-vol:/app/uploads
    depends_on:
      - db
    environment:
      - PORT=3000
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/sprint
      - JWT_ACCESS_TOKEN_SECRET=${JWT_ACCESS_TOKEN_SECRET}
      - JWT_REFRESH_TOKEN_SECRET=${JWT_REFRESH_TOKEN_SECRET}
      - AWS_REGION=${AWS_REGION}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_BUCKET_NAME=${AWS_BUCKET_NAME}
    command: > 
      sh -c "npx prisma migrate deploy && npm run build && npm run start"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:latest
    container_name: sprint-nginx
    networks:
      - sprint-net
    depends_on:
      - server
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 80:80
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
networks:
  sprint-net:
    name: sprint-net
volumes:
  sprint-vol:
  upload-vol: